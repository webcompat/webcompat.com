#!/usr/bin/env python
# -*- coding: utf-8 -*-
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

import os

# Define the application directory
BASE_DIR = os.path.abspath(os.path.dirname(__file__))

THREADS_PER_PAGE = 8

# Secret key for signing cookies.
# Doesn't really matter for local testing.
SECRET_KEY = ""

# the PRODUCTION env var is set in uwsgi.conf
PRODUCTION = os.environ.get('PRODUCTION')

DEBUG = False

if not PRODUCTION:
    DEBUG = True

# Get the secrets from [1] if you're part of the webcompat organization.
# Otherwise, create your own test and production applications.
#
# [1]<https://github.com/organizations/webcompat/settings/applications/>

# Default to production, otherwise development
if PRODUCTION:
    GITHUB_CLIENT_ID = ""
    GITHUB_CLIENT_SECRET = ""
    GITHUB_CALLBACK_URL = ""
else:
    # We're in developement, use the test application
    GITHUB_CLIENT_ID = ""
    GITHUB_CLIENT_SECRET = ""
    GITHUB_CALLBACK_URL = ""

# GiHub Issues repo URI
if PRODUCTION:
    ISSUES_REPO_URI = "<user>/<repo>/issues"
else:
    ISSUES_REPO_URI = "<user>/<repo>/issues"

# This is the oauth token we use to report issues on behalf of people
# who don't want to give GitHub oauth access (or don't have GitHub accounts)
# If you don't want to create another user for testing, you could put in
# your own access token. See
# help.github.com/articles/creating-an-access-token-for-command-line-use
BOT_OAUTH_TOKEN = ""